name: Build Automation Jobs

on:
  workflow_dispatch:
    inputs:
      serverlist:
        description: 'Comma-separated list of servers'
        required: true
        default: 'SERVER1,SERVER2,SERVER3'

jobs:


  Prepare:
    runs-on: windows-latest
    steps:
      - name: Create serverlist file
        shell: powershell
        run: |
          Set-Content -Path serverlist.txt -Value "${{ github.event.inputs.serverlist }}"
      - name: Upload serverlist artifact
        uses: actions/upload-artifact@v4
        with:
          name: serverlist
          path: serverlist.txt

  Approval_Gate_1:
    runs-on: windows-latest
    needs: Prepare
    environment:
      name: approval-gate-1
    steps:
      - name: Wait for approval before proceeding. Verify parameters
        run: echo "Approval 1 granted."

  Pre_Build:
    runs-on: windows-latest
    needs: Approval_Gate_1
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: serverlist
      - name: Print serverlist in Pre Build
        shell: powershell
        run: |
          $servers = Get-Content serverlist.txt -Raw
          foreach ($server in $servers -split ',') {
            Write-Host "Pre Build Server: $server"
          }

  Database_Deployments:
    runs-on: windows-latest
    needs: Pre_Build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: serverlist
      - name: Print serverlist in database_deployments
        shell: powershell
        run: |
          $servers = Get-Content serverlist.txt -Raw
          foreach ($server in $servers -split ',') {
            Write-Host "database_deployments Server: $server"
          }

  Build_Configuration:
    runs-on: windows-latest
    needs: Database_Deployments
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: serverlist
      - name: Print serverlist in build_configuration
        shell: powershell
        run: |
          $servers = Get-Content serverlist.txt -Raw
          foreach ($server in $servers -split ',') {
            Write-Host "Build_configuration Server: $server"
          }

  Approval_Gate_2:
    runs-on: windows-latest
    needs: Build_Configuration
    environment:
      name: approval-gate-2
    steps:
      - name: Wait for approval before proceeding with failovers and restarts.
        run: echo "Approval 2 granted."

  SQL_Failovers_and_Restarts:
    runs-on: windows-latest
    needs: Approval_Gate_2
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: serverlist
      - name: Print serverlist in SQL_Failovers_and_Restarts
        shell: powershell
        run: |
          $servers = Get-Content serverlist.txt -Raw
          foreach ($server in $servers -split ',') {
            Write-Host "SQL_Failovers_and_Restarts Server: $server"
          }

  Post_Restart_Configuration:
    runs-on: windows-latest
    needs: SQL_Failovers_and_Restarts
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: serverlist
      - name: Print serverlist in Post_Restart_Configuration
        shell: powershell
        run: |
          $servers = Get-Content serverlist.txt -Raw
          foreach ($server in $servers -split ',') {
            Write-Host "Post_Restart_Configuration Server: $server"
          }

  Reporting_and_Monitoring:
    runs-on: windows-latest
    needs: Post_Restart_Configuration
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: serverlist
      - name: Print serverlist in Reporting_and_Monitoring
        shell: powershell
        run: |
          $servers = Get-Content serverlist.txt -Raw
          foreach ($server in $servers -split ',') {
            Write-Host "Post Restart Configuration Server: $server"
          }